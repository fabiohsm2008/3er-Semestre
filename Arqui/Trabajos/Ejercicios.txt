Convertir 1.28 a binario
1. Separar partes:
1+0.28
bit de signo = 0
0|
8 bits de exponenciacion:
1 = 00000001
0|00000001|
hallando el decimal
0.28 * 2 = 0.56		00000001.0
0.48 * 2 = 1.12		00000001.01
0.12 * 2 = 0.24		00000001.010
0.24 * 2 = 0.48		00000001.0100
0.48 * 2 = 0.96		00000001.01000
0.96 * 2 = 1.92		00000001.010001
0.92 * 2 = 1.84		00000001.0100011
0.84 * 2 = 1.68		00000001.01000111
0.68 * 2 = 1.36		00000001.010001111
0.36 * 2 = 0.72		00000001.0100011110
0.72 * 2 = 1.44		00000001.01000111101
0.44 * 2 = 0.88		00000001.010001111010
0.88 * 2 = 1.76		00000001.0100011110101
0.76 * 2 = 1.52		00000001.01000111101011
0.52 * 2 = 1.04		00000001.010001111010111
0.04 * 2 = 0.08		00000001.0100011110101110
0.08 * 2 = 0.16		00000001.01000111101011100
0.16 * 2 = 0.32		00000001.010001111010111000
0.32 * 2 = 0.64		00000001.0100011110101110000
0.64 * 2 = 1.28		00000001.01000111101011100001
0.28 * 2 = 0.56		00000001.010001111010111000010
0.56 * 2 = 1.12		00000001.0100011110101110000101
0.12 * 2 = 0.24		00000001.01000111101011100001010

binario entero

0|00000001|01000111101011100001010 * 2^0  ya esta normalizado

exponente = 127 + 0
exponente = 127
127 = 01111111

resultado final

0|01111111|01000111101011100001010

Comprobacion con internet = 0.01111111 .01000111101011100001010

Resolver -5 * 4 con algoritmo de booth
5 = 0101  	4 = 0100
-5 = 1011  	-4 = 1100

A	Q	Q-1	M
0000	1011	0	0100
-------------------------------
1100	1011	0	0100
1110	0101	1	0100
-------------------------------
1110	0101	1	0100
1111	0010	1	0100
-------------------------------
0011	0010	1	0100
0001	1001	0	0100
-------------------------------
1101	1001	0	0100
1110	1100	1	0100


rpta 11101100 = -20

COMPROBACION
-20 = 11101100
20 complemento a 1 = 00010011

Operación para 20 complemento a 2
     11
00010011+
       1
--------
00010100 = 20